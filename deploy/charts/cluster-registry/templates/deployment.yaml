apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cluster-registry-controller.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cluster-registry-controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "cluster-registry-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.istio.revision }}
        istio.io/rev: {{ .Values.istio.revision }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "cluster-registry-controller.labels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "cluster-registry-controller.fullname" . }}
      containers:
        - name: manager
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /manager
          args:
            - "--cluster-validator-webhook-enabled={{ .Values.webhooks.clusterValidator.enabled  }}"
          {{- if and (.Values.webhooks.clusterValidator.enabled) (.Values.webhooks.clusterValidator.nameSuffix) }}
            - "--cluster-validator-webhook-name={{ include "cluster-registry-controller.fullname" . }}-{{ .Values.webhooks.clusterValidator.nameSuffix }}"
          {{- end }}
          {{- if and (.Values.webhooks.clusterValidator.enabled) (.Values.webhooks.clusterValidator.port) }}
            - "--cluster-validator-webhook-port={{ .Values.webhooks.clusterValidator.port }}"
          {{- end }}
          {{- if and (.Values.webhooks.clusterValidator.enabled) (.Values.webhooks.clusterValidator.certificateDirectory) }}
            - "--cluster-validator-webhook-certificate-directory={{ .Values.webhooks.clusterValidator.certificateDirectory }}"
          {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: health
              containerPort: {{ .Values.health.port }}
              protocol: TCP
          {{- if and (.Values.webhooks.clusterValidator.enabled) (.Values.webhooks.clusterValidator.port) }}
            - containerPort: {{ .Values.webhooks.clusterValidator.port }}
              name: http-cl-val-wh
              protocol: TCP
          {{- end }}
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: METRICS_ADDR
              value: ":{{ .Values.service.port }}"
            - name: LEADER_ELECTION_ENABLED
              value: "{{ .Values.controller.leaderElection.enabled }}"
            - name: LEADER_ELECTION_NAME
              value: "{{ .Values.controller.leaderElection.name }}"
            - name: LEADER_ELECTION_NAMESPACE
              value: "{{ .Release.Namespace }}"
            - name: LOG_FORMAT
              value: "{{ .Values.controller.log.format }}"
            - name: LOG_VERBOSITY
              value: "{{ .Values.controller.log.verbosity }}"
            {{ if .Values.localCluster.name }}
            - name: PROVISION_LOCAL_CLUSTER
              value: "{{ .Values.localCluster.name }}"
            {{ end }}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: READER_SERVICE_ACCOUNT_NAME
              value: "{{ include "cluster-registry-controller.fullname" . }}-reader"
            - name: NETWORK_NAME
              value: "{{ .Values.controller.network.name }}"
            - name: MANAGE_LOCAL_CLUSTER_SECRET
              value: "{{ .Values.localCluster.manageSecret }}"
            - name: APISERVER_ENDPOINT_ADDRESS
              value: "{{ .Values.controller.apiServerEndpointAddress }}"
            - name: CORE_RESOURCES_SOURCE_ENABLED
              value: "{{ .Values.controller.coreResourceSource.enabled }}"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
